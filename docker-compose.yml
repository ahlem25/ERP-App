services:
  # Base de données PostgreSQL pour Keycloak
  postgres:
    image: postgres:15-alpine
    container_name: erp-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - erp-network

  # Keycloak pour l'authentification
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: erp-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
    command: start-dev
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - erp-network
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import

  # Service utilisateur ERP (version simplifiée) - DÉSACTIVÉ TEMPORAIREMENT
  # erp-user-service:
  #   image: openjdk:17-jdk-slim
  #   container_name: erp-user-service
  #   environment:
  #     SPRING_PROFILES_ACTIVE: docker
  #     KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
  #     KEYCLOAK_REALM: erp-realm
  #     KEYCLOAK_CLIENT_ID: erp-backend
  #     KEYCLOAK_CLIENT_SECRET: erp-backend-secret
  #   ports:
  #     - "8055:8055"
  #   depends_on:
  #     - keycloak
  #     - postgres
  #   networks:
  #     - erp-network
  #   volumes:
  #     - ./erp-user-service/target:/app
  #   command: >
  #     sh -c "
  #       echo 'Service ERP démarré sur le port 8055' &&
  #       echo 'Keycloak: http://localhost:8081' &&
  #       echo 'PostgreSQL: localhost:5432' &&
  #       echo 'En attente de Keycloak...' &&
  #       sleep 30 &&
  #       echo 'Démarrage de l application Java...' &&
  #       cd /app &&
  #       java -jar erp-user-service-0.0.1-SNAPSHOT.jar
  #     "

volumes:
  postgres_data:

networks:
  erp-network:
    driver: bridge